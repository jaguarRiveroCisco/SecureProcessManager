#!/usr/bin/env bash

say_message() {
  local voice=$1
  shift
  say -r 200 -v "$voice" "$@"
}

clean() {
  say_message "Anne" "Cleaning."
  rm -rf build > /dev/null 2>&1
}

conf() {
  say_message "Anne" "Configuring"
  local generator=${1:-unix}
  if [ "$generator" == "ninja" ]; then
    say_message "Anne" "Ninja mode! YES!" &
    cmake -B build -S . -G Ninja
  else
    say_message "Anne" "Using Unix Makefiles...bleh!" &
    cmake -B build -S . -G "Unix Makefiles"
  fi

  if [ $? -ne 0 ]; then
    say_message "Anne" "Nope! you messed up dude!"
    exit 1
  fi
}

build() {
  say_message "Anne" "Building..." &
  if ! cmake --build build --parallel 3; then
    say_message "Anne" "you messed up dude!"
    exit 1
  fi
}

doall() {
  local generator=${1:-unix}
  say_message "Anne" "Doing it all?. I'll try my best!"
  clean
  conf "$generator"
  build
}

# Clear terminal screen and remove old log files
clear
rm -f logs/*.log > /dev/null 2>&1

case "$1" in
  clean)
    clean
    ;;
  conf)
    conf "$2"
    ;;
  build)
    build
    ;;
  doall)
    doall "$2"
    ;;
  *)
    [ ! -d "build" ] && conf "unix"
    build
    ;;
esac

if [ $? -ne 0 ]; then
  say_message "Anne" "Build failed" &
  exit 1
else
  say_message "Anne" "Build sucessful" &
  exit 0
fi