#!/usr/bin/env bash

# Default process name
process_name="ProcessController"

# Check if a parameter is provided
if [ $# -gt 0 ]; then
  process_name="$1"
fi

previous_output=""
previous_line_count=0
current_pid=$$
# Variable to track if the say command was executed
say_executed=false

while true; do
  # Capture the output excluding the script and its process
  current_output=$(ps -ax -o pid,stat,comm,args | grep "$process_name" | grep -v grep | grep -v "$current_pid" | grep -v "$0")
  
  # Count the number of non-empty lines in current_output
  line_count=$(echo "$current_output" | grep -c '[^[:space:]]')

  if [[ "$current_output" != "$previous_output" ]]; then
    echo  # Print an empty line to indicate a change

    # Play a beep sound
    tput bel

    echo "$current_output"
    echo "Total number of $process_name processes: $line_count"

    if [[ "$line_count" -ne "$previous_line_count" ]]; then
      say -r 300 "$line_count"
      say_executed=true
    fi

    previous_output="$current_output"
    previous_line_count="$line_count"
  fi

  # Only sleep if say was not executed
  if [[ "$say_executed" == false ]]; then
    sleep 0.01  # Sleep for 100 milliseconds
  fi
done